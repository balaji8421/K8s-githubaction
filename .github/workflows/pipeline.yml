name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
      
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: my-cluster                  
  GKE_ZONE: us-central1-c                     
  DEPLOYMENT_NAME: deployment
  IMAGE: niranjanv64/microsvc-static-1
  TAG: latest
    
jobs:
  build-push:
    name: Build, Push and deploy app to gke
    runs-on: ubuntu-latest
    environment: deployment
    
    steps:
      
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
        
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
    
    # Build the Docker image
#   - name: Build
#     run: |-
#        docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$TAG" .

   
    # Deploy sample image to the GKE cluster      
    - name: Deploy
      run: |-
         kubectl apply -f ConfigMap.yml
         kubectl apply -f deployment.yml
#         kubectl rollout status deployment/$DEPLOYMENT_NAME
#         kubectl get services -o wide
         
 # Push the Docker image to Google Container Registry+
    - name: Publish
      run: |-
        docker tag $IMAGE:latest "gcr.io/$PROJECT_ID/$IMAGE:$TAG"
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$TAG"
           
                  
